(ns ryan.main
  ;; pure dart package are imported using string
  (:require ["package:flutter/material.dart" :as m]
            ["dart:async" :as a]
            ["package:google_fonts/google_fonts.dart" :as gf]
            [cljd.flutter.alpha :as f]))

;; ui/app_colors.dart
(def primary-color (m/Color 0xff006837))
(def primary-dark-color (m/Color 0xff004012))
(def secondary-color (m/Color 0xffEFEFEF))
(def accent-color (m/Color 0xffBA5A31))
(def black m.Colors/black54)

(def initial-todos
  [{:text "Do Nothing" :dueDate (.now DateTime)}
   {:text "Get back to 1985" :dueDate (-> DateTime (.now) (.add (Duration :hours 5))) :priority 5}
   {:text "Buy a parrot and teach him to say ?help! I?ve been turned into a parrot!" :dueDate (-> DateTime (.now) (.add (Duration :days 1))) :priority 4}
   {:text "Order Diet water whenever I go out to eat" :dueDate (-> DateTime (.now) (.add (Duration :days 2))) :priority 4}
   {:text "Buy a turtle. Name it ?The Speed of Light.? Tell everyone that I can run faster than The Speed of Light." :dueDate (-> DateTime (.now) (.add (Duration :days 3))) :priority 4}
   {:text "Hire two private investigators. Get them to follow each other." :dueDate (-> DateTime (.now) (.add (Duration :days 4))) :priority 3}
   {:text "World Peace" :dueDate (-> DateTime (.now) (.add (Duration :days 5))) :priority 2}
   {:text "Become a teacher. Make a test where every answer is ?C?." :dueDate (-> DateTime (.now) (.add (Duration :days 6))) :priority 1}])

(defn ^a/Future fetch-todos []
  (a.Future/delayed (Duration :seconds 4)
    (fn []
      (let [n (rand-int 100)]
        (if (< n 90)
          initial-todos
          (throw (Exception "Error while fetching todos")))))))

;; ui/_shared/progress_widget.dart
(def progress-widget
  (f/nest
    m/Center
    (m/CircularProgressIndicator :valueColor (m/AlwaysStoppedAnimation (.green m/Colors)))))

(def app-bar
  (m/AppBar
    :centerTitle true
    :title
    (f/widget
      :inherit [m/Theme]
      (m/Text "The Morning App"
        :style (-> theme .-textTheme .headline6 (.copyWith :color (.white m/Colors) :fontSize 24))))))

(def bottom-navigation-bar
  (m/BottomNavigationBar
    :currentIndex 0
    :onTap (fn [index] nil)
    :items [(m/BottomNavigationBarItem
              :icon (m/Icon (.today_outlined m/Icons))
              :label "Todos")
            (m/BottomNavigationBarItem
              :icon (m/Icon (.article m/Icons))
              :label "News")]))

(def todos-page
  (f/widget
    :inherit [:todos m/ScaffoldMessenger]
    (f/widget
      :state [is-loading true]
      :with [:let [todos ((fn []
                            (try  (let [t (await (fetch-todos))]
                                    (swap! todos into t)
                                    (reset! is-loading false))
                                  (catch Exception e
                                    (.showSnackBar scaffold-messenger
                                      (m/SnackBar :content (m/Text "Error while fetching the todos!")))))))
                   is-adding-todo (m/ValueNotifier false)
                   toggle-is-adding-todo (fn [] (set! (.-value is-adding-todo) (not (.-value is-adding-todo))) nil)]]
      (f/nest
        (m/WillPopScope :onWillPop (fn []
                                     (when (.value is-adding-todo)
                                       (do (toggle-is-adding-todo) (.value a/Future false)))
                                     (.value a/Future true)))
        (m/Scaffold
          :floatingActionButton
          (f/nest
            (m/FloatingActionButton :onPressed (fn [] (toggle-is-adding-todo)) :backgroundColor accent-color)
            (m/ValueListenableBuilder
              :valueListenable is-adding-todo
              :builder
              (fn [_ is-adding-mode __]
                (m/Icon (if is-adding-mode m.Icons/close m.Icons/add) :color m.Colors/white))))
          :bottomSheet
          (f/nest
            (m/ValueListenableBuilder
              :valueListenable is-adding-todo
              :builder (fn [_ is-adding-mode child] (if (and is-adding-mode (not= child nil)) child m.SizedBox/shrink)))
            (m/BottomSheet
              :backgroundColor secondary-color
              :onClosing (fn [])
              :builder (fn [_] (m/Text. "AddTodoWidget") #_(m/AddTodoWidget :onSubmitTap #_addTodo))))
          :body (if @is-loading progress-widget #_(buildTodoList) (m/Text "todolist")))))))

(def home-page
  (let [pages [todos-page
               #_(m/NewsPage :newsRepository (m/NewsRepository :remoteDataSource (m/NewsRemoteDataSource)))]]
    (m/Scaffold
      :appBar app-bar
      :body (nth pages 0)
      :bottomNavigationBar bottom-navigation-bar)))

(defn main []
  (m.WidgetsFlutterBinding/ensureInitialized)
  (m/runApp
    (let [w700BitterFont (.bitter gf/GoogleFonts :fontWeight (.w700 m/FontWeight))]
      (f/widget
        :bind {:todos []}
        (m/MaterialApp
          :title "The Morning App"
          :theme (m/ThemeData
                   :colorScheme (m.ColorScheme/fromSwatch :primarySwatch m.Colors/green)
                   :primaryColor primary-color
                   :primaryColorDark primary-dark-color
                   :accentColor secondary-color
                   :appBarTheme (m/AppBarTheme :brightness m.Brightness/dark)
                   :primaryTextTheme (m/TextTheme :headline6 w700BitterFont)
                   :textTheme (m/TextTheme
                                :subtitle1 (.apply w700BitterFont :color black)
                                :headline6 (.apply w700BitterFont :color black)
                                :bodyText2 (.apply w700BitterFont :color black)))
          :home home-page
          :debugShowCheckedModeBanner false)))))
